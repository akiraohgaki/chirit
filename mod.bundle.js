const __default={globalThis:globalThis};const HTMLElementRef=__default.globalThis.HTMLElement;class CustomElement extends HTMLElementRef{#updateCounter;#updateDelay;#updateTimerId;#updatePromiseResolvers;static get observedAttributes(){return[];}static define(name,options){__default.globalThis.customElements.define(name,this,options);}constructor(){super();this.#updateCounter=0;this.#updateDelay=50;this.#updateTimerId=undefined;this.#updatePromiseResolvers=[];}get updateCounter(){return this.#updateCounter;}attributeChangedCallback(_name,oldValue,newValue,_namespace){if(this.#updateCounter&&oldValue!==newValue){this.update();}}connectedCallback(){if(this.#updateCounter){this.update();}else{this.updateSync();}}disconnectedCallback(){}adoptedCallback(_oldDocument,_newDocument){}update(){if(this.#updateTimerId!==undefined){__default.globalThis.clearTimeout(this.#updateTimerId);this.#updateTimerId=undefined;}this.#updateTimerId=__default.globalThis.setTimeout(()=>{__default.globalThis.clearTimeout(this.#updateTimerId);this.#updateTimerId=undefined;const promiseResolvers=this.#updatePromiseResolvers.splice(0);this.updateSync();for(const resolve of promiseResolvers){resolve();}},this.#updateDelay);return new Promise(resolve=>{this.#updatePromiseResolvers.push(resolve);});}updateSync(){try{this.render();this.#updateCounter++;this.updatedCallback();}catch(exception){this.errorCallback(exception);}}render(){}updatedCallback(){}errorCallback(exception){console.error(exception);}}class ElementAttributesProxy{constructor(target){let targetRef=new WeakRef(target);const getTarget=()=>{if(targetRef){const target=targetRef.deref();if(target){return target;}else{targetRef=null;}}throw new Error("The target element is not available.");};return new Proxy({},{set:(_target,name,value)=>{const target=getTarget();if(typeof name==="string"&&typeof value==="string"){target.setAttribute(name,value);return true;}return false;},get:(_target,name)=>{const target=getTarget();if(typeof name==="string"&&target.hasAttribute(name)){return target.getAttribute(name);}return undefined;},deleteProperty:(_target,name)=>{const target=getTarget();if(typeof name==="string"&&target.hasAttribute(name)){target.removeAttribute(name);return true;}return false;},has:(_target,name)=>{const target=getTarget();if(typeof name==="string"&&target.hasAttribute(name)){return true;}return false;},ownKeys:()=>{const target=getTarget();const keys=[];if(target.hasAttributes()){for(const attribute of Array.from(target.attributes)){keys.push(attribute.name);}}return keys;},getOwnPropertyDescriptor:(_target,name)=>{const target=getTarget();if(typeof name==="string"&&target.hasAttribute(name)){return{configurable:true,enumerable:true,value:target.getAttribute(name)};}return undefined;}});}}const hostCollection=new WeakSet;class NodeStructure{#hostRef;#contextRef;constructor(host,context){hostCollection.add(host);this.#hostRef=new WeakRef(host);this.#contextRef=context?new WeakRef(context):null;}get host(){return this.#getHost();}adoptStyles(styles){const host=this.#getHost();if(host instanceof __default.globalThis.Document||host instanceof __default.globalThis.ShadowRoot){const sheets=[];const entries=Array.isArray(styles)?styles:[styles];for(const entry of entries){if(entry instanceof __default.globalThis.CSSStyleSheet){sheets.push(entry);}else if(typeof entry==="string"){const sheet=new __default.globalThis.CSSStyleSheet;sheet.replaceSync(entry);sheets.push(sheet);}}if(sheets.length){host.adoptedStyleSheets=sheets;}}else{console.warn("The styles cannot be adopted because the host node is not a Document or ShadowRoot.");}}update(content){const host=this.#getHost();if(content instanceof __default.globalThis.Document||content instanceof __default.globalThis.DocumentFragment){this.#patchNodesInsideOf(host,content);}else{this.#patchNodesInsideOf(host,this.#createDocumentFragment(content));}this.#fixOneventHandlersInsideOf(host);}clone(){const host=this.#getHost();return this.#createDocumentFragment(host.childNodes);}#getHost(){if(this.#hostRef){const host=this.#hostRef.deref();if(host){return host;}else{this.#hostRef=null;}}throw new Error("The host node is not available.");}#getContext(){if(this.#contextRef){const context=this.#contextRef.deref();if(context){return context;}else{this.#contextRef=null;}}return undefined;}#createDocumentFragment(content){if(typeof content==="string"){const template=__default.globalThis.document.createElement("template");template.innerHTML=content;return template.content;}const documentFragment=__default.globalThis.document.createDocumentFragment();if(content instanceof __default.globalThis.Node){documentFragment.appendChild(content.cloneNode(true));}else if(content instanceof __default.globalThis.NodeList&&content.length){for(const node of Array.from(content)){documentFragment.appendChild(node.cloneNode(true));}}return documentFragment;}#patchNodesInsideOf(original,diff){if(original.hasChildNodes()||diff.hasChildNodes()){const originalChildNodes=Array.from(original.childNodes);const diffChildNodes=Array.from(diff.childNodes);const maxLength=Math.max(originalChildNodes.length,diffChildNodes.length);for(let i=0;i<maxLength;i++){this.#patchNodes(original,originalChildNodes[i]??null,diffChildNodes[i]??null);}}}#patchNodes(parent,original,diff){if(original&&!diff){parent.removeChild(original);}else if(!original&&diff){parent.appendChild(diff.cloneNode(true));}else if(original&&diff){if(original.nodeType===diff.nodeType&&original.nodeName===diff.nodeName){if(original instanceof __default.globalThis.Element&&diff instanceof __default.globalThis.Element){this.#patchAttributes(original,diff);if(!hostCollection.has(original)){this.#patchNodesInsideOf(original,diff);}}else if(original instanceof __default.globalThis.CharacterData&&diff instanceof __default.globalThis.CharacterData){if(original.nodeValue!==diff.nodeValue){original.nodeValue=diff.nodeValue;}}else{parent.replaceChild(diff.cloneNode(true),original);}}else{parent.replaceChild(diff.cloneNode(true),original);}}}#patchAttributes(original,diff){if(original.hasAttributes()){for(const attribute of Array.from(original.attributes)){if(!diff.hasAttribute(attribute.name)){original.removeAttribute(attribute.name);}}}if(diff.hasAttributes()){for(const attribute of Array.from(diff.attributes)){if(!original.hasAttribute(attribute.name)||original.getAttribute(attribute.name)!==attribute.value){original.setAttribute(attribute.name,attribute.value);}}}}#fixOneventHandlersInsideOf(target){if(target.hasChildNodes()){for(const node of Array.from(target.childNodes)){if(node instanceof __default.globalThis.Element){this.#fixOneventHandlers(node);}}}}#fixOneventHandlers(target){if(target.hasAttributes()){for(const attribute of Array.from(target.attributes)){if(attribute.name.search(/^on\w+/i)!==-1){const onevent=attribute.name.toLowerCase();const oneventTarget=target;if(onevent in target&&typeof oneventTarget[onevent]==="function"){const handler=new Function("event",attribute.value);const context=this.#getContext();target.removeAttribute(attribute.name);oneventTarget[onevent]=handler.bind(context??target);}}}}if(!hostCollection.has(target)){this.#fixOneventHandlersInsideOf(target);}}}class Component extends CustomElement{#attr;#structure;constructor(){super();this.update=this.update.bind(this);this.#attr=new ElementAttributesProxy(this);this.#structure=new NodeStructure(this.createContentContainer(),this);}get attr(){return this.#attr;}get structure(){return this.#structure;}get content(){return this.#structure.host;}observe(...args){for(const arg of args){if(arg.subscribe&&typeof arg.subscribe==="function"){arg.subscribe(this.update);}}}unobserve(...args){for(const arg of args){if(arg.unsubscribe&&typeof arg.unsubscribe==="function"){arg.unsubscribe(this.update);}}}dispatch(type,detail){return this.#structure.host.dispatchEvent(new __default.globalThis.CustomEvent(type,{detail:detail,bubbles:true,composed:true}));}createContentContainer(){return this.attachShadow({mode:"open"});}render(){if(!this.updateCounter&&this.#structure.host instanceof __default.globalThis.ShadowRoot){this.#structure.adoptStyles(this.styles());}this.#structure.update(this.template());}styles(){return[];}template(){return"";}}function createComponent(name,options){const CustomComponent=class extends Component{static get observedAttributes(){return options?.observedAttributes&&Array.isArray(options.observedAttributes)?options.observedAttributes:super.observedAttributes;}constructor(){super();if(options?.init&&typeof options.init==="function"){options.init(this);}}connectedCallback(){super.connectedCallback();if(options?.connected&&typeof options.connected==="function"){options.connected(this);}}disconnectedCallback(){if(options?.disconnected&&typeof options.disconnected==="function"){options.disconnected(this);}super.disconnectedCallback();}styles(){return options?.styles&&typeof options.styles==="function"?options.styles(this):super.styles();}template(){return options?.template&&typeof options.template==="function"?options.template(this):super.template();}};CustomComponent.define(name);return CustomComponent;}class Observable{#observerCollection;constructor(){this.#observerCollection=new Set;}subscribe(observer){this.#observerCollection.add(observer);}unsubscribe(observer){this.#observerCollection.delete(observer);}notify(value){for(const observer of this.#observerCollection){observer(value);}}}class Router{#mode;#base;#onchange;#onerror;#routeCollection;#_hashchangeCallback;#_popstateCallback;constructor(mode,base=""){if(mode!=="hash"&&mode!=="history"){throw new Error('The routing mode must be set to "hash" or "history".');}this.#mode=mode;this.#base=base&&!base.endsWith("/")?base+"/":base;this.#onchange=()=>{};this.#onerror=exception=>{console.error(exception);};this.#routeCollection=new Map;this.#_hashchangeCallback=this.#hashchangeCallback.bind(this);this.#_popstateCallback=this.#popstateCallback.bind(this);}get mode(){return this.#mode;}get base(){return this.#base;}set onchange(handler){this.#onchange=handler;}get onchange(){return this.#onchange;}set onerror(handler){this.#onerror=handler;}get onerror(){return this.#onerror;}set(pattern,handler){if(!this.#routeCollection.size){if(this.#mode==="hash"){__default.globalThis.addEventListener("hashchange",this.#_hashchangeCallback);}else if(this.#mode==="history"){__default.globalThis.addEventListener("popstate",this.#_popstateCallback);}}this.#routeCollection.set(this.#fixRoutePattern(pattern),handler);}delete(pattern){this.#routeCollection.delete(this.#fixRoutePattern(pattern));if(!this.#routeCollection.size){if(this.#mode==="hash"){__default.globalThis.removeEventListener("hashchange",this.#_hashchangeCallback);}else if(this.#mode==="history"){__default.globalThis.removeEventListener("popstate",this.#_popstateCallback);}}}navigate(url){if(this.#mode==="hash"){this.#navigateWithHashMode(url);}else if(this.#mode==="history"){this.#navigateWithHistoryMode(url);}}#navigateWithHashMode(url){let newVirtualPath="";if(url.search(/^[A-Za-z0-9\+\-\.]+:\/\/|\?|#/)!==-1){const newUrl=new __default.globalThis.URL(url,__default.globalThis.location.href);const newUrlParts=newUrl.href.split("#");const oldUrlParts=__default.globalThis.location.href.split("#");if(newUrlParts[0]!==oldUrlParts[0]){__default.globalThis.location.href=newUrl.href;return;}newVirtualPath=newUrlParts[1]??"";}else{newVirtualPath=url;}const oldVirtualPath=__default.globalThis.location.hash.substring(1);const oldVirtualUrl=new __default.globalThis.URL(oldVirtualPath,__default.globalThis.location.origin);const newVirtualUrl=new __default.globalThis.URL(this.#resolveBaseUrl(newVirtualPath),oldVirtualUrl.href);if(newVirtualUrl.pathname!==oldVirtualPath){__default.globalThis.location.hash=newVirtualUrl.pathname;return;}this.#invokeRouteHandler(newVirtualUrl.pathname);}#navigateWithHistoryMode(url){const newUrl=new __default.globalThis.URL(this.#resolveBaseUrl(url),__default.globalThis.location.href);if(newUrl.origin!==__default.globalThis.location.origin){__default.globalThis.location.href=newUrl.href;return;}if(newUrl.href!==__default.globalThis.location.href){__default.globalThis.history.pushState({},"",newUrl.href);this.#onchange(new __default.globalThis.CustomEvent("pushstate"));}this.#invokeRouteHandler(newUrl.pathname);}#hashchangeCallback(event){this.#onchange(event);this.#invokeRouteHandler(__default.globalThis.location.hash.substring(1));}#popstateCallback(event){this.#onchange(event);this.#invokeRouteHandler(__default.globalThis.location.pathname);}#invokeRouteHandler(path){try{for(const[pattern,handler]of this.#routeCollection){const matches=path.match(new RegExp(pattern));if(matches){handler(matches.groups??{});break;}}}catch(exception){this.#onerror(exception);}}#resolveBaseUrl(url){return this.#base&&url.search(/^([A-Za-z0-9\+\-\.]+:\/\/|\/)/)===-1?this.#base+url:url;}#fixRoutePattern(pattern){return`/${pattern}`.replace(/([^?]):(\w+)/g,"$1(?<$2>[^/?#]+)").substring(1);}}class State extends Observable{#initialState;#state;constructor(state){super();this.#initialState=state;this.#state=state;}reset(){this.#state=this.#initialState;this.notify();}set(state){this.#state=state;this.notify();}get(){return this.#state;}notify(){super.notify(this.#state);}}class Store extends Observable{#initialState;#state;constructor(state){super();this.#initialState=__default.globalThis.structuredClone(state);this.#state=__default.globalThis.structuredClone(state);}get state(){return this.#state;}reset(){this.#state=__default.globalThis.structuredClone(this.#initialState);this.notify();}update(state){this.#state=__default.globalThis.structuredClone({...this.#state,...state});this.notify();}notify(){super.notify(this.#state);}}class WebStorage{#mode;#prefix;#storage;constructor(mode,prefix=""){this.#mode=mode;this.#prefix=prefix;switch(this.#mode){case"local":{this.#storage=__default.globalThis.localStorage;break;}case"session":{this.#storage=__default.globalThis.sessionStorage;break;}default:{throw new Error('The storage mode must be set to "local" or "session".');}}}get mode(){return this.#mode;}get prefix(){return this.#prefix;}get size(){return this.#storage.length;}keys(){const keys=[];if(this.#storage.length){for(let i=0;i<this.#storage.length;i++){keys.push(this.#storage.key(i));}}return keys;}set(key,value){this.#storage.setItem(this.#prefix+key,JSON.stringify({_v:value}));}get(key){const value=this.#storage.getItem(this.#prefix+key);if(typeof value==="string"){if(value){try{const deserializedValue=JSON.parse(value);return deserializedValue._v;}catch{return value;}}return value;}return undefined;}delete(key){this.#storage.removeItem(this.#prefix+key);}clear(){this.#storage.clear();}}export{createComponent as createComponent};export{Component as Component};export{CustomElement as CustomElement};export{ElementAttributesProxy as ElementAttributesProxy};export{NodeStructure as NodeStructure};export{Observable as Observable};export{Router as Router};export{State as State};export{Store as Store};export{WebStorage as WebStorage};